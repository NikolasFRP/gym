


Даны два отсортированных списка с интервалами присутствия
пользователей в онлайне в течение дня. Начало интервала строго меньше конца.
Нужно вычислить интервалы, когда оба пользователя были в онлайне.


intersection(
    {{8, 12}, {17, 22}},
    {{5, 11}, {14, 18}, {20, 23}}
); // {{8, 11}, {17, 18}, {20, 22}}

intersection(
    {{9, 15}, {18, 21}},
    {{10, 14}, {21, 22}}
); // {{10, 14}}

using Intervals = std::vector<std::pair<int, int>>;

Intervals inter(const Intervals& i1, const Intervals& i2) {
    //
}







 Написать метод, который заменит все пробелы в строке на  "%20" inplace.
 На вход подается строка с зарезервированными под расширение символами
 (гарантируется, что  resize до разумных размеров не будет аллоцировать память).

std::string s0 = "my url";
s0.reserve(20);
urlify(s0);
assert(s0 == "my%20url");

void urlify(std::string& s) {

}


Разбить слова на группы анаграмм и отсортировать  в алфавитном порядке

Пример:
["eat", "tea", "tan", "ate", "nat", "bat"]


[
  ["ate", "eat", "tea"],
  ["nat", "tan"],
  ["bat"]
]










Убрать циклы

[В,Ю,З,С,В] -> [В]
[В,Ю,З,В,С,С,В] -> [В,С,В]

Циклы могут быть и вложенными и любой длины

